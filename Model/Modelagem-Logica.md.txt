
CREATE TABLE Cliente (
  id_cliente INT AUTO_INCREMENT PRIMARY KEY,
  nome VARCHAR(150) NOT NULL,
  email VARCHAR(150) NOT NULL UNIQUE,
  telefone VARCHAR(30),
  data_cadastro DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Endereco (
  id_endereco INT AUTO_INCREMENT PRIMARY KEY,
  id_cliente INT NOT NULL,
  apelido VARCHAR(50),
  logradouro VARCHAR(200) NOT NULL,
  numero VARCHAR(20) NOT NULL,
  complemento VARCHAR(100),
  bairro VARCHAR(100),
  cidade VARCHAR(100) NOT NULL,
  estado VARCHAR(50),
  cep VARCHAR(20),
  principal TINYINT(1) DEFAULT 0,
  FOREIGN KEY (id_cliente) REFERENCES Cliente(id_cliente) ON DELETE CASCADE
);

CREATE TABLE Categoria (
  id_categoria INT AUTO_INCREMENT PRIMARY KEY,
  nome VARCHAR(100) NOT NULL UNIQUE,
  descricao TEXT
);

CREATE TABLE Fornecedor (
  id_fornecedor INT AUTO_INCREMENT PRIMARY KEY,
  nome VARCHAR(150) NOT NULL,
  contato VARCHAR(150)
);

CREATE TABLE Produto (
  id_produto INT AUTO_INCREMENT PRIMARY KEY,
  nome VARCHAR(200) NOT NULL,
  descricao TEXT,
  id_categoria INT,
  preco_base DECIMAL(10,2) NOT NULL DEFAULT 0.00,
  ativo TINYINT(1) NOT NULL DEFAULT 1,
  criado_em DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (id_categoria) REFERENCES Categoria(id_categoria) ON DELETE SET NULL
);

CREATE TABLE ProdutoVariante (
  id_variante INT AUTO_INCREMENT PRIMARY KEY,
  id_produto INT NOT NULL,
  sku VARCHAR(50) NOT NULL UNIQUE,
  cor VARCHAR(50),
  tamanho VARCHAR(10),
  preco DECIMAL(10,2) NULL,
  estoque INT NOT NULL DEFAULT 0,
  imagem_principal VARCHAR(255),
  FOREIGN KEY (id_produto) REFERENCES Produto(id_produto) ON DELETE CASCADE
);

CREATE TABLE ImagemProduto (
  id_imagem INT AUTO_INCREMENT PRIMARY KEY,
  id_produto INT NOT NULL,
  url VARCHAR(255) NOT NULL,
  descricao VARCHAR(255),
  FOREIGN KEY (id_produto) REFERENCES Produto(id_produto) ON DELETE CASCADE
);

CREATE TABLE Pedido (
  id_pedido INT AUTO_INCREMENT PRIMARY KEY,
  id_cliente INT NOT NULL,
  id_endereco INT NOT NULL,
  data_pedido DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  status ENUM('novo','confirmado','enviado','entregue','cancelado','devolucao') DEFAULT 'novo',
  total DECIMAL(10,2) NOT NULL DEFAULT 0.00,
  FOREIGN KEY (id_cliente) REFERENCES Cliente(id_cliente) ON DELETE RESTRICT,
  FOREIGN KEY (id_endereco) REFERENCES Endereco(id_endereco) ON DELETE RESTRICT
);

CREATE TABLE PedidoItem (
  id_item INT AUTO_INCREMENT PRIMARY KEY,
  id_pedido INT NOT NULL,
  id_variante INT NOT NULL,
  quantidade INT NOT NULL,
  preco_unitario DECIMAL(10,2) NOT NULL,
  subtotal DECIMAL(10,2) NOT NULL,
  FOREIGN KEY (id_pedido) REFERENCES Pedido(id_pedido) ON DELETE CASCADE,
  FOREIGN KEY (id_variante) REFERENCES ProdutoVariante(id_variante) ON DELETE RESTRICT
);

CREATE TABLE Pagamento (
  id_pagamento INT AUTO_INCREMENT PRIMARY KEY,
  id_pedido INT NOT NULL,
  metodo ENUM('cartao','boleto','pix','paypal') NOT NULL,
  status ENUM('pendente','aprovado','recusado','estornado') DEFAULT 'pendente',
  valor DECIMAL(10,2) NOT NULL,
  data_pagamento DATETIME,
  transacao_id VARCHAR(150),
  FOREIGN KEY (id_pedido) REFERENCES Pedido(id_pedido) ON DELETE CASCADE
);

CREATE TABLE EstoqueMovimento (
  id_movimento INT AUTO_INCREMENT PRIMARY KEY,
  id_variante INT NOT NULL,
  tipo ENUM('entrada','saida','ajuste') NOT NULL,
  quantidade INT NOT NULL,
  data_movimento DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  referencia VARCHAR(150),
  FOREIGN KEY (id_variante) REFERENCES ProdutoVariante(id_variante) ON DELETE CASCADE
);

-- índices úteis
CREATE INDEX idx_produto_categoria ON Produto(id_categoria);
CREATE INDEX idx_variante_produto ON ProdutoVariante(id_produto);
CREATE INDEX idx_pedido_cliente ON Pedido(id_cliente);
CREATE INDEX idx_estoque_variante ON EstoqueMovimento(id_variante);

SET FOREIGN_KEY_CHECKS = 1;
